name: build and push

on:
  push:
    branches:
      - 'master'

env:
  IMAGE_NAME: eks-nvme-ssd-provisioner

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials (staging)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ AWS_STAGING_ROLE }}"
          aws-region: eu-west-1

      - name: Build and push (staging)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.alpine
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:latest-staging
          cache-to: type=inline

      - name: Configure AWS credentials (production)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ AWS_PRODUCTION_ROLE }}"
          aws-region: eu-west-1

      - name: Build and push (production)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.alpine
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:latest-staging
          cache-to: type=inline
